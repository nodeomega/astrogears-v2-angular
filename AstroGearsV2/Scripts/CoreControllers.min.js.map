{"version":3,"sources":["CoreControllers.js"],"names":["Core","Application","Controllers","EnteredChartsListingController","$scope","$filter","enteredChartListingService","_this","this","scope","filter","enteredChartsListingService","data","errorMessage","entriesPerPage","value","numberOfPages","totalPages","currentEntriesPerPage","currentPageNumber","enteredChartListing","chartTypeList","listingIsLoading","addingNewChart","editingChart","addNewChartChartType","newChart","SubjectName","SubjectLocation","OriginDateTime","OriginDateTimeUnknown","ChartType","ChartTypeId","ChartTypeName","editChart","EnteredChartId","OpenCreateNewChartForm","that","GetChartTypesList","addNewChart","CloseCreateNewChartForm","OpenEditChartForm","id","GetEnteredChart","CloseEditChartForm","GetEnteredChartsListing","entriesPerPageChanged","getEnteredChartListing","then","result","Listing","i","TotalPages","push","finally","getEnteredChart","Chart","OriginDateTimeString","length","getChartTypesList","ChartTypes","AddNewChart","CommonLibrary","successIcon","Message","catch","errorIcon","ExceptionMessage","ConfirmChartEdit"],"mappings":"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","file":"CoreControllers.min.js","sourcesContent":["/// <reference path=\"coreservices.ts\" />\r\n/// <reference path=\"coredirectives.ts\" />\r\n/// <reference path=\"core.ts\" />\r\nvar Core;\r\n(function (Core) {\r\n    \"use strict\";\r\n    // controllers for the AngularJS app.\r\n    var Application;\r\n    (function (Application) {\r\n        var Controllers;\r\n        (function (Controllers) {\r\n            var EnteredChartsListingController = (function () {\r\n                function EnteredChartsListingController($scope, $filter, enteredChartListingService) {\r\n                    var _this = this;\r\n                    this.scope = $scope;\r\n                    this.filter = $filter;\r\n                    this.enteredChartsListingService = enteredChartListingService;\r\n                    this.data = [];\r\n                    this.scope.errorMessage = \"\";\r\n                    this.scope.entriesPerPage = [\r\n                        { value: 10 },\r\n                        { value: 25 },\r\n                        { value: 50 },\r\n                        { value: 100 },\r\n                        { value: 250 }\r\n                    ];\r\n                    this.scope.numberOfPages = [{ value: 1 }];\r\n                    this.scope.totalPages = 1;\r\n                    this.scope.currentEntriesPerPage = this.scope.entriesPerPage[0];\r\n                    this.scope.currentPageNumber = this.scope.numberOfPages[0];\r\n                    this.scope.enteredChartListing = [];\r\n                    this.scope.chartTypeList = [];\r\n                    this.scope.listingIsLoading = false;\r\n                    this.scope.addingNewChart = false;\r\n                    this.scope.editingChart = false;\r\n                    this.scope.addNewChartChartType = \"\";\r\n                    this.scope.newChart = {\r\n                        SubjectName: \"\",\r\n                        SubjectLocation: \"\",\r\n                        OriginDateTime: \"\",\r\n                        OriginDateTimeUnknown: false,\r\n                        ChartType: { ChartTypeId: 0, ChartTypeName: \"NULL\" }\r\n                    };\r\n                    this.scope.editChart = {\r\n                        EnteredChartId: 0,\r\n                        SubjectName: \"\",\r\n                        SubjectLocation: \"\",\r\n                        OriginDateTime: \"\",\r\n                        OriginDateTimeUnknown: false,\r\n                        ChartType: { ChartTypeId: 0, ChartTypeName: \"NULL\" }\r\n                    };\r\n                    //this.scope.SetUserId = ((id: any) => {\r\n                    //    this.scope.userId = id;\r\n                    //});\r\n                    this.scope.OpenCreateNewChartForm = (function () {\r\n                        var that = _this;\r\n                        that.scope.addingNewChart = true;\r\n                        that.scope.GetChartTypesList();\r\n                        that.scope.addNewChart.ChartType = that.scope.chartTypeList[0];\r\n                    });\r\n                    this.scope.CloseCreateNewChartForm = (function () {\r\n                        var that = _this;\r\n                        that.scope.addingNewChart = false;\r\n                    });\r\n                    this.scope.OpenEditChartForm = (function (id) {\r\n                        var that = _this;\r\n                        that.scope.editingChart = true;\r\n                        that.scope.GetChartTypesList();\r\n                        that.scope.GetEnteredChart(id);\r\n                    });\r\n                    this.scope.CloseEditChartForm = (function () {\r\n                        var that = _this;\r\n                        that.scope.editingChart = false;\r\n                    });\r\n                    this.scope.GetEnteredChartsListing = (function (entriesPerPageChanged) {\r\n                        var that = _this;\r\n                        that.scope.listingIsLoading = true;\r\n                        if (entriesPerPageChanged)\r\n                            that.scope.currentPageNumber = { value: 1 };\r\n                        that.enteredChartsListingService\r\n                            .getEnteredChartListing(that.scope.currentPageNumber.value, that.scope.currentEntriesPerPage.value)\r\n                            .then(function (result) {\r\n                            that.scope.enteredChartListing = result.data.Listing;\r\n                            if (entriesPerPageChanged) {\r\n                                that.scope.numberOfPages = [{ value: 1 }];\r\n                                for (var i = 2; i <= result.data.TotalPages; i++) {\r\n                                    that.scope.numberOfPages.push({ value: i });\r\n                                }\r\n                                that.scope.totalPages = result.data.TotalPages;\r\n                            }\r\n                        })\r\n                            .finally(function () {\r\n                            that.scope.listingIsLoading = false;\r\n                            that.scope.entriesPerPageChanged = false;\r\n                        });\r\n                    });\r\n                    this.scope.GetEnteredChart = (function (id) {\r\n                        var that = _this;\r\n                        that.enteredChartsListingService.getEnteredChart(id)\r\n                            .then(function (result) {\r\n                            that.scope.editChart = {\r\n                                EnteredChartId: result.data.Chart.EnteredChartId,\r\n                                SubjectName: result.data.Chart.SubjectName,\r\n                                SubjectLocation: result.data.Chart.SubjectLocation,\r\n                                OriginDateTime: result.data.Chart.OriginDateTimeString,\r\n                                OriginDateTimeUnknown: result.data.Chart.OriginDateTimeUnknown,\r\n                                ChartType: {\r\n                                    ChartTypeId: result.data.Chart.ChartTypeId,\r\n                                    ChartTypeName: result.data.Chart.ChartTypeName\r\n                                }\r\n                            };\r\n                        });\r\n                    });\r\n                    this.scope.GetChartTypesList = (function () {\r\n                        var that = _this;\r\n                        if (that.scope.chartTypeList.length === 0) {\r\n                            that.enteredChartsListingService.getChartTypesList()\r\n                                .then(function (result) {\r\n                                that.scope.chartTypeList = result.data.ChartTypes;\r\n                            });\r\n                        }\r\n                    });\r\n                    this.scope.AddNewChart = (function () {\r\n                        var that = _this;\r\n                        that.enteredChartsListingService\r\n                            .addNewChart(that.scope.newChart.SubjectName, that.scope.newChart.SubjectLocation, that.scope.newChart.OriginDateTime, that.scope.newChart.OriginDateTimeUnknown, that.scope.newChart.ChartType.ChartTypeId)\r\n                            .then(function (result) {\r\n                            that.scope.errorMessage = CommonLibrary.successIcon + \" \" + result.data.Message;\r\n                            that.scope.GetEnteredChartsListing(false);\r\n                        })\r\n                            .catch(function (result) {\r\n                            that.scope.errorMessage = CommonLibrary.errorIcon + \" \" + result.data.ExceptionMessage;\r\n                        })\r\n                            .finally(function () {\r\n                            _this.scope.newChart = {\r\n                                SubjectName: \"\",\r\n                                SubjectLocation: \"\",\r\n                                OriginDateTime: \"\",\r\n                                OriginDateTimeUnknown: false,\r\n                                ChartType: { ChartTypeId: 0, ChartTypeName: \"NULL\" }\r\n                            };\r\n                            that.scope.addingNewChart = false;\r\n                        });\r\n                    });\r\n                    this.scope.ConfirmChartEdit = (function () {\r\n                        var that = _this;\r\n                        that.enteredChartsListingService\r\n                            .editChart(that.scope.newChart.EnteredChartId, that.scope.newChart.SubjectName, that.scope.newChart.SubjectLocation, that.scope.newChart.OriginDateTime, that.scope.newChart.OriginDateTimeUnknown, that.scope.newChart.ChartType.ChartTypeId)\r\n                            .then(function (result) {\r\n                            that.scope.errorMessage = CommonLibrary.successIcon + \" \" + result.data.Message;\r\n                            that.scope.GetEnteredChartsListing(false);\r\n                        })\r\n                            .catch(function (result) {\r\n                            that.scope.errorMessage = CommonLibrary.errorIcon + \" \" + result.data.ExceptionMessage;\r\n                        })\r\n                            .finally(function () {\r\n                            _this.scope.editChart = {\r\n                                EnteredChartId: 0,\r\n                                SubjectName: \"\",\r\n                                SubjectLocation: \"\",\r\n                                OriginDateTime: \"\",\r\n                                OriginDateTimeUnknown: false,\r\n                                ChartType: { ChartTypeId: 0, ChartTypeName: \"NULL\" }\r\n                            };\r\n                            that.scope.addingNewChart = false;\r\n                        });\r\n                    });\r\n                }\r\n                return EnteredChartsListingController;\r\n            }());\r\n            Controllers.EnteredChartsListingController = EnteredChartsListingController;\r\n        })(Controllers = Application.Controllers || (Application.Controllers = {}));\r\n    })(Application = Core.Application || (Core.Application = {}));\r\n})(Core || (Core = {}));\r\n"],"sourceRoot":"/source/"}