{"version":3,"sources":["moment-timezone.js"],"names":["root","factory","define","amd","module","exports","require","moment","this","charCodeToInt","charCode","unpackBase60","string","num","i","parts","split","whole","fractional","multiplier","out","sign","charCodeAt","length","arrayToInt","array","intToUntil","Math","round","Infinity","mapIndices","source","indices","unpack","data","offsets","untils","name","abbrs","population","Zone","packedString","_set","OffsetAt","at","timeString","toTimeString","abbr","match","join","undefined","offset","getTimezoneOffset","ZoneScore","zone","offsetScore","abbrScore","findChange","low","high","mid","diff","Date","userOffsets","change","next","startYear","getFullYear","last","push","sortZoneScores","a","b","addToGuesses","guesses","guessesForUserOffsets","j","guessesOffset","offsetsLength","filteredGuesses","hasOwnProperty","names","rebuildGuess","intlName","Intl","DateTimeFormat","resolvedOptions","timeZone","normalizeName","logError","e","zoneScore","zoneScores","getZone","scoreOffsetAt","sort","guess","ignoreCache","cachedGuess","toLowerCase","replace","addZone","packed","normalized","zones","caller","link","links","getNames","addLink","aliases","alias","normal0","normal1","loadData","tz","dataVersion","version","zoneExists","didShowError","needsOffset","m","_a","_tzm","message","console","error","input","args","Array","prototype","slice","call","arguments","utc","apply","isMoment","add","parse","abbrWrap","old","_z","resetZoneWrap","VERSION","momentVersion","major","minor","unpacked","_index","timestamp","target","offsetNext","offsetPrev","max","moveAmbiguousForward","moveInvalidForward","mom","offsetAt","abs","_zones","_links","_names","load","fn","defaultZone","updateOffset","keepTime","_isUTC","_d","utcOffset","zoneName","zoneAbbr","setDefault","momentProperties","Object","toString"],"mappings":"CAMC,SAAUA,EAAMC,GAChB,YAGsB,mBAAXC,SAAyBA,OAAOC,IAC1CD,QAAQ,UAAWD,GACS,gBAAXG,SAAuBA,OAAOC,QAC/CD,OAAOC,QAAUJ,EAAQK,QAAQ,WAEjCL,EAAQD,EAAKO,SAEbC,KAAM,SAAUD,GACjB,YA4BA,SAASE,GAAcC,GACtB,MAAIA,GAAW,GACPA,EAAW,GACRA,EAAW,GACdA,EAAW,GAEZA,EAAW,GAGnB,QAASC,GAAaC,GACrB,GAKCC,GALGC,EAAI,EACPC,EAAQH,EAAOI,MAAM,KACrBC,EAAQF,EAAM,GACdG,EAAaH,EAAM,IAAM,GACzBI,EAAa,EAEbC,EAAM,EACNC,EAAO,CASR,KAN6B,KAAzBT,EAAOU,WAAW,KACrBR,EAAI,EACJO,GAAO,GAIHP,EAAGA,EAAIG,EAAMM,OAAQT,IACzBD,EAAMJ,EAAcQ,EAAMK,WAAWR,IACrCM,EAAM,GAAKA,EAAMP,CAIlB,KAAKC,EAAI,EAAGA,EAAII,EAAWK,OAAQT,IAClCK,GAA0B,GAC1BN,EAAMJ,EAAcS,EAAWI,WAAWR,IAC1CM,GAAOP,EAAMM,CAGd,OAAOC,GAAMC,EAGd,QAASG,GAAYC,GACpB,IAAK,GAAIX,GAAI,EAAGA,EAAIW,EAAMF,OAAQT,IACjCW,EAAMX,GAAKH,EAAac,EAAMX,IAIhC,QAASY,GAAYD,EAAOF,GAC3B,IAAK,GAAIT,GAAI,EAAGA,EAAIS,EAAQT,IAC3BW,EAAMX,GAAKa,KAAKC,OAAOH,EAAMX,EAAI,IAAM,GAAiB,IAAXW,EAAMX,GAGpDW,GAAMF,EAAS,GAAKM,EAAAA,EAGrB,QAASC,GAAYC,EAAQC,GAC5B,GAAclB,GAAVM,IAEJ,KAAKN,EAAI,EAAGA,EAAIkB,EAAQT,OAAQT,IAC/BM,EAAIN,GAAKiB,EAAOC,EAAQlB,GAGzB,OAAOM,GAGR,QAASa,GAAQrB,GAChB,GAAIsB,GAAOtB,EAAOI,MAAM,KACvBmB,EAAUD,EAAK,GAAGlB,MAAM,KACxBgB,EAAUE,EAAK,GAAGlB,MAAM,IACxBoB,EAAUF,EAAK,GAAGlB,MAAM,IAQzB,OANAQ,GAAWW,GACXX,EAAWQ,GACXR,EAAWY,GAEXV,EAAWU,EAAQJ,EAAQT,SAG1Bc,KAAaH,EAAK,GAClBI,MAAaR,EAAWI,EAAK,GAAGlB,MAAM,KAAMgB,GAC5CG,QAAaL,EAAWK,EAASH,GACjCI,OAAaA,EACbG,WAAuB,EAAVL,EAAK,IAQpB,QAASM,GAAMC,GACVA,GACHjC,KAAKkC,KAAKT,EAAOQ,IAgEnB,QAASE,GAASC,GACjB,GAAIC,GAAaD,EAAGE,eAChBC,EAAOF,EAAWG,MAAM,eACxBD,IAAQA,EAAK,IAGhBA,EAAOA,EAAK,GAAGC,MAAM,UACrBD,EAAOA,EAAOA,EAAKE,KAAK,IAAMC,SAI9BH,EAAOF,EAAWG,MAAM,eACxBD,EAAOA,EAAOA,EAAK,GAAKG,QAGZ,QAATH,IACHA,EAAOG,QAGR1C,KAAKoC,IAAMA,EACXpC,KAAKuC,KAAOA,EACZvC,KAAK2C,OAASP,EAAGQ,oBAGlB,QAASC,GAAUC,GAClB9C,KAAK8C,KAAOA,EACZ9C,KAAK+C,YAAc,EACnB/C,KAAKgD,UAAY,EAUlB,QAASC,GAAWC,EAAKC,GAGxB,IAFA,GAAIC,GAAKC,EAEDA,EAAyC,MAAhCF,EAAKf,GAAKc,EAAId,IAAM,KAAO,IAC3CgB,EAAM,GAAIjB,GAAS,GAAImB,MAAKJ,EAAId,GAAKiB,IACjCD,EAAIT,SAAWO,EAAIP,OACtBO,EAAME,EAEND,EAAOC,CAIT,OAAOF,GAGR,QAASK,KACR,GAGCC,GAAQC,EAAMnD,EAHXoD,GAAY,GAAIJ,OAAOK,cAAgB,EAC1CC,EAAO,GAAIzB,GAAS,GAAImB,MAAKI,EAAW,EAAG,IAC3C/B,GAAWiC,EAGZ,KAAKtD,EAAI,EAAGA,EAAI,GAAIA,IACnBmD,EAAO,GAAItB,GAAS,GAAImB,MAAKI,EAAWpD,EAAG,IACvCmD,EAAKd,SAAWiB,EAAKjB,SACxBa,EAASP,EAAWW,EAAMH,GAC1B9B,EAAQkC,KAAKL,GACb7B,EAAQkC,KAAK,GAAI1B,GAAS,GAAImB,MAAKE,EAAOpB,GAAK,QAEhDwB,EAAOH,CAGR,KAAKnD,EAAI,EAAGA,EAAI,EAAGA,IAClBqB,EAAQkC,KAAK,GAAI1B,GAAS,GAAImB,MAAKI,EAAYpD,EAAG,EAAG,KACrDqB,EAAQkC,KAAK,GAAI1B,GAAS,GAAImB,MAAKI,EAAYpD,EAAG,EAAG,IAGtD,OAAOqB,GAGR,QAASmC,GAAgBC,EAAGC,GAC3B,MAAID,GAAEhB,cAAgBiB,EAAEjB,YAChBgB,EAAEhB,YAAciB,EAAEjB,YAEtBgB,EAAEf,YAAcgB,EAAEhB,UACde,EAAEf,UAAYgB,EAAEhB,UAEjBgB,EAAElB,KAAKf,WAAagC,EAAEjB,KAAKf,WAGnC,QAASkC,GAAcpC,EAAMF,GAC5B,GAAIrB,GAAGqC,CAEP,KADA3B,EAAWW,GACNrB,EAAI,EAAGA,EAAIqB,EAAQZ,OAAQT,IAC/BqC,EAAShB,EAAQrB,GACjB4D,EAAQvB,GAAUuB,EAAQvB,OAC1BuB,EAAQvB,GAAQd,IAAQ,EAI1B,QAASsC,GAAuBxC,GAC/B,GAGCrB,GAAG8D,EAAGC,EAHHC,EAAgB3C,EAAQZ,OAC3BwD,KACA3D,IAGD,KAAKN,EAAI,EAAGA,EAAIgE,EAAehE,IAAK,CACnC+D,EAAgBH,EAAQvC,EAAQrB,GAAGqC,WACnC,KAAKyB,IAAKC,GACLA,EAAcG,eAAeJ,KAChCG,EAAgBH,IAAK,GAKxB,IAAK9D,IAAKiE,GACLA,EAAgBC,eAAelE,IAClCM,EAAIiD,KAAKY,EAAMnE,GAIjB,OAAOM,GAGR,QAAS8D,KAGR,IACC,GAAIC,GAAWC,KAAKC,iBAAiBC,kBAAkBC,SACnDlD,EAAO4C,EAAMO,EAAcL,GAC/B,IAAI9C,EACH,MAAOA,EAERoD,GAAS,yBAA2BN,EAAW,0DAC9C,MAAOO,IAIT,GAICC,GAAW7E,EAAG8D,EAJXzC,EAAU4B,IACbe,EAAgB3C,EAAQZ,OACxBmD,EAAUC,EAAsBxC,GAChCyD,IAGD,KAAK9E,EAAI,EAAGA,EAAI4D,EAAQnD,OAAQT,IAAK,CAEpC,IADA6E,EAAY,GAAItC,GAAUwC,EAAQnB,EAAQ5D,IAAKgE,GAC1CF,EAAI,EAAGA,EAAIE,EAAeF,IAC9Be,EAAUG,cAAc3D,EAAQyC,GAEjCgB,GAAWvB,KAAKsB,GAKjB,MAFAC,GAAWG,KAAKzB,GAETsB,EAAWrE,OAAS,EAAIqE,EAAW,GAAGtC,KAAKjB,KAAOa,OAG1D,QAAS8C,GAAOC,GAIf,MAHKC,KAAeD,IACnBC,EAAchB,KAERgB,EAOR,QAASV,GAAenD,GACvB,OAAQA,GAAQ,IAAI8D,cAAcC,QAAQ,MAAO,KAGlD,QAASC,GAASC,GACjB,GAAIxF,GAAGuB,EAAMrB,EAAOuF,CAMpB,KAJsB,gBAAXD,KACVA,GAAUA,IAGNxF,EAAI,EAAGA,EAAIwF,EAAO/E,OAAQT,IAC9BE,EAAQsF,EAAOxF,GAAGE,MAAM,KACxBqB,EAAOrB,EAAM,GACbuF,EAAaf,EAAcnD,GAC3BmE,EAAMD,GAAcD,EAAOxF,GAC3BmE,EAAMsB,GAAclE,EAChBrB,EAAM,IACTyD,EAAa8B,EAAYvF,EAAM,GAAGA,MAAM,MAK3C,QAAS6E,GAASxD,EAAMoE,GACvBpE,EAAOmD,EAAcnD,EAErB,IACIqE,GADApD,EAAOkD,EAAMnE,EAGjB,OAAIiB,aAAgBd,GACZc,EAGY,gBAATA,IACVA,EAAO,GAAId,GAAKc,GAChBkD,EAAMnE,GAAQiB,EACPA,GAIJqD,EAAMtE,IAASoE,IAAWZ,IAAYa,EAAOb,EAAQc,EAAMtE,GAAOwD,KACrEvC,EAAOkD,EAAMnE,GAAQ,GAAIG,GACzBc,EAAKZ,KAAKgE,GACVpD,EAAKjB,KAAO4C,EAAM5C,GACXiB,GAGD,KAGR,QAASsD,KACR,GAAI9F,GAAGM,IAEP,KAAKN,IAAKmE,GACLA,EAAMD,eAAelE,KAAO0F,EAAM1F,IAAM0F,EAAMG,EAAM7F,MAAQmE,EAAMnE,IACrEM,EAAIiD,KAAKY,EAAMnE,GAIjB,OAAOM,GAAI2E,OAGZ,QAASc,GAASC,GACjB,GAAIhG,GAAGiG,EAAOC,EAASC,CAMvB,KAJuB,gBAAZH,KACVA,GAAWA,IAGPhG,EAAI,EAAGA,EAAIgG,EAAQvF,OAAQT,IAC/BiG,EAAQD,EAAQhG,GAAGE,MAAM,KAEzBgG,EAAUxB,EAAcuB,EAAM,IAC9BE,EAAUzB,EAAcuB,EAAM,IAE9BJ,EAAMK,GAAWC,EACjBhC,EAAM+B,GAAWD,EAAM,GAEvBJ,EAAMM,GAAWD,EACjB/B,EAAMgC,GAAWF,EAAM,GAIzB,QAASG,GAAUhF,GAClBmE,EAAQnE,EAAKsE,OACbK,EAAQ3E,EAAKyE,OACbQ,EAAGC,YAAclF,EAAKmF,QAGvB,QAASC,GAAYjF,GAKpB,MAJKiF,GAAWC,eACfD,EAAWC,cAAe,EACzB9B,EAAS,yBAA2BpD,EAAO,uDAAyDA,EAAO,SAEpGwD,EAAQxD,GAGlB,QAASmF,GAAaC,GACrB,SAAUA,EAAEC,IAAkBxE,SAAXuE,EAAEE,MAGtB,QAASlC,GAAUmC,GACK,mBAAZC,UAAoD,kBAAlBA,SAAQC,OACpDD,QAAQC,MAAMF,GAQhB,QAAST,GAAIY,GACZ,GAAIC,GAAOC,MAAMC,UAAUC,MAAMC,KAAKC,UAAW,GAAG,GACnDhG,EAAOgG,UAAUA,UAAU9G,OAAS,GACpC+B,EAAOuC,EAAQxD,GACfjB,EAAOb,EAAO+H,IAAIC,MAAM,KAAMP,EAQ/B,OANI1E,KAAS/C,EAAOiI,SAAST,IAAUP,EAAYpG,IAClDA,EAAIqH,IAAInF,EAAKoF,MAAMtH,GAAM,WAG1BA,EAAI+F,GAAG9E,GAEAjB,EAqER,QAASuH,GAAUC,GAClB,MAAO,YACN,MAAIpI,MAAKqI,GAAarI,KAAKqI,GAAG9F,KAAKvC,MAC5BoI,EAAIR,KAAK5H,OAIlB,QAASsI,GAAeF,GACvB,MAAO,YAEN,MADApI,MAAKqI,GAAK,KACHD,EAAIL,MAAM/H,KAAM6H,YAniBzB,GAAkBnF,SAAd3C,EAAO4G,GAEV,MADA1B,GAAS,mBAAqBlF,EAAO4G,GAAGE,QAAU,wBAA0B9G,EAAO4G,GAAGC,YAAc,kBAAoB,oBAAsB7G,EAAO4G,GAAGC,aACjJ7G,CAGR,IAKC2F,GALG6C,EAAU,QACbvC,KACAG,KACA1B,KACAP,KAGAsE,EAAgBzI,EAAO8G,QAAQrG,MAAM,KACrCiI,GAASD,EAAc,GACvBE,GAASF,EAAc,IAGpBC,EAAQ,GAAgB,IAAVA,GAAeC,EAAQ,IACxCzD,EAAS,wEAA0ElF,EAAO8G,QAAU,sBAuGrG7E,EAAK0F,WACJxF,KAAO,SAAUyG,GAChB3I,KAAK6B,KAAa8G,EAAS9G,KAC3B7B,KAAK8B,MAAa6G,EAAS7G,MAC3B9B,KAAK4B,OAAa+G,EAAS/G,OAC3B5B,KAAK2B,QAAagH,EAAShH,QAC3B3B,KAAK+B,WAAa4G,EAAS5G,YAG5B6G,OAAS,SAAUC,GAClB,GAECvI,GAFGwI,GAAUD,EACbjH,EAAS5B,KAAK4B,MAGf,KAAKtB,EAAI,EAAGA,EAAIsB,EAAOb,OAAQT,IAC9B,GAAIwI,EAASlH,EAAOtB,GACnB,MAAOA,IAKV4H,MAAQ,SAAUW,GACjB,GAIClG,GAAQoG,EAAYC,EAAY1I,EAJ7BwI,GAAWD,EACdlH,EAAU3B,KAAK2B,QACfC,EAAU5B,KAAK4B,OACfqH,EAAUrH,EAAOb,OAAS,CAG3B,KAAKT,EAAI,EAAGA,EAAI2I,EAAK3I,IAWpB,GAVAqC,EAAahB,EAAQrB,GACrByI,EAAapH,EAAQrB,EAAI,GACzB0I,EAAarH,EAAQrB,EAAIA,EAAI,EAAIA,GAE7BqC,EAASoG,GAAcpC,EAAGuC,qBAC7BvG,EAASoG,EACCpG,EAASqG,GAAcrC,EAAGwC,qBACpCxG,EAASqG,GAGNF,EAASlH,EAAOtB,GAAe,IAATqC,EACzB,MAAOhB,GAAQrB,EAIjB,OAAOqB,GAAQsH,IAGhB1G,KAAO,SAAU6G,GAChB,MAAOpJ,MAAK8B,MAAM9B,KAAK4I,OAAOQ,KAG/BzG,OAAS,SAAUyG,GAClB,MAAOpJ,MAAK2B,QAAQ3B,KAAK4I,OAAOQ,MAsClCvG,EAAU6E,UAAUpC,cAAgB,SAAU+D,GAC7CrJ,KAAK+C,aAAe5B,KAAKmI,IAAItJ,KAAK8C,KAAKH,OAAO0G,EAASjH,IAAMiH,EAAS1G,QAClE3C,KAAK8C,KAAKP,KAAK8G,EAASjH,IAAII,MAAM,UAAUC,KAAK,MAAQ4G,EAAS9G,MACrEvC,KAAKgD,aAiQP2D,EAAGE,QAAe0B,EAClB5B,EAAGC,YAAe,GAClBD,EAAG4C,OAAevD,EAClBW,EAAG6C,OAAerD,EAClBQ,EAAG8C,OAAehF,EAClBkC,EAAGsB,IAAepC,EAClBc,EAAGT,KAAeG,EAClBM,EAAG+C,KAAehD,EAClBC,EAAG7D,KAAeuC,EAClBsB,EAAGG,WAAeA,EAClBH,EAAGnB,MAAeA,EAClBmB,EAAGlC,MAAe2B,EAClBO,EAAG3E,KAAeA,EAClB2E,EAAGlF,OAAeA,EAClBkF,EAAGxG,aAAeA,EAClBwG,EAAGK,YAAeA,EAClBL,EAAGwC,oBAAuB,EAC1BxC,EAAGuC,sBAAuB,CAM1B,IAAIS,GAAK5J,EAAO4J,EAEhB5J,GAAO4G,GAAKA,EAEZ5G,EAAO6J,YAAc,KAErB7J,EAAO8J,aAAe,SAAUT,EAAKU,GACpC,GACCnH,GADGG,EAAO/C,EAAO6J,WAGHlH,UAAX0G,EAAIf,KACHvF,GAAQkE,EAAYoC,KAASA,EAAIW,SACpCX,EAAIY,GAAKjK,EAAO+H,IAAIsB,EAAIlC,IAAI8C,GAC5BZ,EAAItB,MAAMG,IAAInF,EAAKoF,MAAMkB,GAAM,YAEhCA,EAAIf,GAAKvF,GAENsG,EAAIf,KACP1F,EAASyG,EAAIf,GAAG1F,OAAOyG,GACnBjI,KAAKmI,IAAI3G,GAAU,KACtBA,GAAkB,IAEGD,SAAlB0G,EAAIa,UACPb,EAAIa,WAAWtH,EAAQmH,GAEvBV,EAAItG,KAAKH,EAAQmH,KAKpBH,EAAGhD,GAAK,SAAU9E,GACjB,MAAIA,IACH7B,KAAKqI,GAAKhD,EAAQxD,GACd7B,KAAKqI,GACRtI,EAAO8J,aAAa7J,MAEpBiF,EAAS,mCAAqCpD,EAAO,4DAE/C7B,MAEJA,KAAKqI,GAAarI,KAAKqI,GAAGxG,KAA9B,QAiBD8H,EAAGO,SAAW/B,EAASwB,EAAGO,UAC1BP,EAAGQ,SAAWhC,EAASwB,EAAGQ,UAC1BR,EAAG7B,IAAWQ,EAAcqB,EAAG7B,KAE/B/H,EAAO4G,GAAGyD,WAAa,SAASvI,GAK/B,OAJI4G,EAAQ,GAAgB,IAAVA,GAAeC,EAAQ,IACxCzD,EAAS,qFAAuFlF,EAAO8G,QAAU,KAElH9G,EAAO6J,YAAc/H,EAAOwD,EAAQxD,GAAQ,KACrC9B,EAIR,IAAIsK,GAAmBtK,EAAOsK,gBAY9B,OAXyD,mBAArDC,OAAO5C,UAAU6C,SAAS3C,KAAKyC,IAElCA,EAAiBxG,KAAK,MACtBwG,EAAiBxG,KAAK,OACZwG,IAEVA,EAAiBhC,GAAK,MAKhBtI","file":"moment-timezone.min.js","sourcesContent":["//! moment-timezone.js\n//! version : 0.5.3\n//! author : Tim Wood\n//! license : MIT\n//! github.com/moment/moment-timezone\n\n(function (root, factory) {\n\t\"use strict\";\n\n\t/*global define*/\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(['moment'], factory);                 // AMD\n\t} else if (typeof module === 'object' && module.exports) {\n\t\tmodule.exports = factory(require('moment')); // Node\n\t} else {\n\t\tfactory(root.moment);                        // Browser\n\t}\n}(this, function (moment) {\n\t\"use strict\";\n\n\t// Do not load moment-timezone a second time.\n\tif (moment.tz !== undefined) {\n\t\tlogError('Moment Timezone ' + moment.tz.version + ' was already loaded ' + (moment.tz.dataVersion ? 'with data from ' : 'without any data') + moment.tz.dataVersion);\n\t\treturn moment;\n\t}\n\n\tvar VERSION = \"0.5.3\",\n\t\tzones = {},\n\t\tlinks = {},\n\t\tnames = {},\n\t\tguesses = {},\n\t\tcachedGuess,\n\n\t\tmomentVersion = moment.version.split('.'),\n\t\tmajor = +momentVersion[0],\n\t\tminor = +momentVersion[1];\n\n\t// Moment.js version check\n\tif (major < 2 || (major === 2 && minor < 6)) {\n\t\tlogError('Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js ' + moment.version + '. See momentjs.com');\n\t}\n\n\t/************************************\n\t\tUnpacking\n\t************************************/\n\n\tfunction charCodeToInt(charCode) {\n\t\tif (charCode > 96) {\n\t\t\treturn charCode - 87;\n\t\t} else if (charCode > 64) {\n\t\t\treturn charCode - 29;\n\t\t}\n\t\treturn charCode - 48;\n\t}\n\n\tfunction unpackBase60(string) {\n\t\tvar i = 0,\n\t\t\tparts = string.split('.'),\n\t\t\twhole = parts[0],\n\t\t\tfractional = parts[1] || '',\n\t\t\tmultiplier = 1,\n\t\t\tnum,\n\t\t\tout = 0,\n\t\t\tsign = 1;\n\n\t\t// handle negative numbers\n\t\tif (string.charCodeAt(0) === 45) {\n\t\t\ti = 1;\n\t\t\tsign = -1;\n\t\t}\n\n\t\t// handle digits before the decimal\n\t\tfor (i; i < whole.length; i++) {\n\t\t\tnum = charCodeToInt(whole.charCodeAt(i));\n\t\t\tout = 60 * out + num;\n\t\t}\n\n\t\t// handle digits after the decimal\n\t\tfor (i = 0; i < fractional.length; i++) {\n\t\t\tmultiplier = multiplier / 60;\n\t\t\tnum = charCodeToInt(fractional.charCodeAt(i));\n\t\t\tout += num * multiplier;\n\t\t}\n\n\t\treturn out * sign;\n\t}\n\n\tfunction arrayToInt (array) {\n\t\tfor (var i = 0; i < array.length; i++) {\n\t\t\tarray[i] = unpackBase60(array[i]);\n\t\t}\n\t}\n\n\tfunction intToUntil (array, length) {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tarray[i] = Math.round((array[i - 1] || 0) + (array[i] * 60000)); // minutes to milliseconds\n\t\t}\n\n\t\tarray[length - 1] = Infinity;\n\t}\n\n\tfunction mapIndices (source, indices) {\n\t\tvar out = [], i;\n\n\t\tfor (i = 0; i < indices.length; i++) {\n\t\t\tout[i] = source[indices[i]];\n\t\t}\n\n\t\treturn out;\n\t}\n\n\tfunction unpack (string) {\n\t\tvar data = string.split('|'),\n\t\t\toffsets = data[2].split(' '),\n\t\t\tindices = data[3].split(''),\n\t\t\tuntils  = data[4].split(' ');\n\n\t\tarrayToInt(offsets);\n\t\tarrayToInt(indices);\n\t\tarrayToInt(untils);\n\n\t\tintToUntil(untils, indices.length);\n\n\t\treturn {\n\t\t\tname       : data[0],\n\t\t\tabbrs      : mapIndices(data[1].split(' '), indices),\n\t\t\toffsets    : mapIndices(offsets, indices),\n\t\t\tuntils     : untils,\n\t\t\tpopulation : data[5] | 0\n\t\t};\n\t}\n\n\t/************************************\n\t\tZone object\n\t************************************/\n\n\tfunction Zone (packedString) {\n\t\tif (packedString) {\n\t\t\tthis._set(unpack(packedString));\n\t\t}\n\t}\n\n\tZone.prototype = {\n\t\t_set : function (unpacked) {\n\t\t\tthis.name       = unpacked.name;\n\t\t\tthis.abbrs      = unpacked.abbrs;\n\t\t\tthis.untils     = unpacked.untils;\n\t\t\tthis.offsets    = unpacked.offsets;\n\t\t\tthis.population = unpacked.population;\n\t\t},\n\n\t\t_index : function (timestamp) {\n\t\t\tvar target = +timestamp,\n\t\t\t\tuntils = this.untils,\n\t\t\t\ti;\n\n\t\t\tfor (i = 0; i < untils.length; i++) {\n\t\t\t\tif (target < untils[i]) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tparse : function (timestamp) {\n\t\t\tvar target  = +timestamp,\n\t\t\t\toffsets = this.offsets,\n\t\t\t\tuntils  = this.untils,\n\t\t\t\tmax     = untils.length - 1,\n\t\t\t\toffset, offsetNext, offsetPrev, i;\n\n\t\t\tfor (i = 0; i < max; i++) {\n\t\t\t\toffset     = offsets[i];\n\t\t\t\toffsetNext = offsets[i + 1];\n\t\t\t\toffsetPrev = offsets[i ? i - 1 : i];\n\n\t\t\t\tif (offset < offsetNext && tz.moveAmbiguousForward) {\n\t\t\t\t\toffset = offsetNext;\n\t\t\t\t} else if (offset > offsetPrev && tz.moveInvalidForward) {\n\t\t\t\t\toffset = offsetPrev;\n\t\t\t\t}\n\n\t\t\t\tif (target < untils[i] - (offset * 60000)) {\n\t\t\t\t\treturn offsets[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn offsets[max];\n\t\t},\n\n\t\tabbr : function (mom) {\n\t\t\treturn this.abbrs[this._index(mom)];\n\t\t},\n\n\t\toffset : function (mom) {\n\t\t\treturn this.offsets[this._index(mom)];\n\t\t}\n\t};\n\n\t/************************************\n\t\tCurrent Timezone\n\t************************************/\n\n\tfunction OffsetAt(at) {\n\t\tvar timeString = at.toTimeString();\n\t\tvar abbr = timeString.match(/\\([a-z ]+\\)/i);\n\t\tif (abbr && abbr[0]) {\n\t\t\t// 17:56:31 GMT-0600 (CST)\n\t\t\t// 17:56:31 GMT-0600 (Central Standard Time)\n\t\t\tabbr = abbr[0].match(/[A-Z]/g);\n\t\t\tabbr = abbr ? abbr.join('') : undefined;\n\t\t} else {\n\t\t\t// 17:56:31 CST\n\t\t\t// 17:56:31 GMT+0800 (台北標準時間)\n\t\t\tabbr = timeString.match(/[A-Z]{3,5}/g);\n\t\t\tabbr = abbr ? abbr[0] : undefined;\n\t\t}\n\n\t\tif (abbr === 'GMT') {\n\t\t\tabbr = undefined;\n\t\t}\n\n\t\tthis.at = +at;\n\t\tthis.abbr = abbr;\n\t\tthis.offset = at.getTimezoneOffset();\n\t}\n\n\tfunction ZoneScore(zone) {\n\t\tthis.zone = zone;\n\t\tthis.offsetScore = 0;\n\t\tthis.abbrScore = 0;\n\t}\n\n\tZoneScore.prototype.scoreOffsetAt = function (offsetAt) {\n\t\tthis.offsetScore += Math.abs(this.zone.offset(offsetAt.at) - offsetAt.offset);\n\t\tif (this.zone.abbr(offsetAt.at).match(/[A-Z]/g).join('') !== offsetAt.abbr) {\n\t\t\tthis.abbrScore++;\n\t\t}\n\t};\n\n\tfunction findChange(low, high) {\n\t\tvar mid, diff;\n\n\t\twhile ((diff = ((high.at - low.at) / 12e4 | 0) * 6e4)) {\n\t\t\tmid = new OffsetAt(new Date(low.at + diff));\n\t\t\tif (mid.offset === low.offset) {\n\t\t\t\tlow = mid;\n\t\t\t} else {\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\n\t\treturn low;\n\t}\n\n\tfunction userOffsets() {\n\t\tvar startYear = new Date().getFullYear() - 2,\n\t\t\tlast = new OffsetAt(new Date(startYear, 0, 1)),\n\t\t\toffsets = [last],\n\t\t\tchange, next, i;\n\n\t\tfor (i = 1; i < 48; i++) {\n\t\t\tnext = new OffsetAt(new Date(startYear, i, 1));\n\t\t\tif (next.offset !== last.offset) {\n\t\t\t\tchange = findChange(last, next);\n\t\t\t\toffsets.push(change);\n\t\t\t\toffsets.push(new OffsetAt(new Date(change.at + 6e4)));\n\t\t\t}\n\t\t\tlast = next;\n\t\t}\n\n\t\tfor (i = 0; i < 4; i++) {\n\t\t\toffsets.push(new OffsetAt(new Date(startYear + i, 0, 1)));\n\t\t\toffsets.push(new OffsetAt(new Date(startYear + i, 6, 1)));\n\t\t}\n\n\t\treturn offsets;\n\t}\n\n\tfunction sortZoneScores (a, b) {\n\t\tif (a.offsetScore !== b.offsetScore) {\n\t\t\treturn a.offsetScore - b.offsetScore;\n\t\t}\n\t\tif (a.abbrScore !== b.abbrScore) {\n\t\t\treturn a.abbrScore - b.abbrScore;\n\t\t}\n\t\treturn b.zone.population - a.zone.population;\n\t}\n\n\tfunction addToGuesses (name, offsets) {\n\t\tvar i, offset;\n\t\tarrayToInt(offsets);\n\t\tfor (i = 0; i < offsets.length; i++) {\n\t\t\toffset = offsets[i];\n\t\t\tguesses[offset] = guesses[offset] || {};\n\t\t\tguesses[offset][name] = true;\n\t\t}\n\t}\n\n\tfunction guessesForUserOffsets (offsets) {\n\t\tvar offsetsLength = offsets.length,\n\t\t\tfilteredGuesses = {},\n\t\t\tout = [],\n\t\t\ti, j, guessesOffset;\n\n\t\tfor (i = 0; i < offsetsLength; i++) {\n\t\t\tguessesOffset = guesses[offsets[i].offset] || {};\n\t\t\tfor (j in guessesOffset) {\n\t\t\t\tif (guessesOffset.hasOwnProperty(j)) {\n\t\t\t\t\tfilteredGuesses[j] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (i in filteredGuesses) {\n\t\t\tif (filteredGuesses.hasOwnProperty(i)) {\n\t\t\t\tout.push(names[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn out;\n\t}\n\n\tfunction rebuildGuess () {\n\n\t\t// use Intl API when available and returning valid time zone\n\t\ttry {\n\t\t\tvar intlName = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\t\t\tvar name = names[normalizeName(intlName)];\n\t\t\tif (name) {\n\t\t\t\treturn name;\n\t\t\t}\n\t\t\tlogError(\"Moment Timezone found \" + intlName + \" from the Intl api, but did not have that data loaded.\");\n\t\t} catch (e) {\n\t\t\t// Intl unavailable, fall back to manual guessing.\n\t\t}\n\n\t\tvar offsets = userOffsets(),\n\t\t\toffsetsLength = offsets.length,\n\t\t\tguesses = guessesForUserOffsets(offsets),\n\t\t\tzoneScores = [],\n\t\t\tzoneScore, i, j;\n\n\t\tfor (i = 0; i < guesses.length; i++) {\n\t\t\tzoneScore = new ZoneScore(getZone(guesses[i]), offsetsLength);\n\t\t\tfor (j = 0; j < offsetsLength; j++) {\n\t\t\t\tzoneScore.scoreOffsetAt(offsets[j]);\n\t\t\t}\n\t\t\tzoneScores.push(zoneScore);\n\t\t}\n\n\t\tzoneScores.sort(sortZoneScores);\n\n\t\treturn zoneScores.length > 0 ? zoneScores[0].zone.name : undefined;\n\t}\n\n\tfunction guess (ignoreCache) {\n\t\tif (!cachedGuess || ignoreCache) {\n\t\t\tcachedGuess = rebuildGuess();\n\t\t}\n\t\treturn cachedGuess;\n\t}\n\n\t/************************************\n\t\tGlobal Methods\n\t************************************/\n\n\tfunction normalizeName (name) {\n\t\treturn (name || '').toLowerCase().replace(/\\//g, '_');\n\t}\n\n\tfunction addZone (packed) {\n\t\tvar i, name, split, normalized;\n\n\t\tif (typeof packed === \"string\") {\n\t\t\tpacked = [packed];\n\t\t}\n\n\t\tfor (i = 0; i < packed.length; i++) {\n\t\t\tsplit = packed[i].split('|');\n\t\t\tname = split[0];\n\t\t\tnormalized = normalizeName(name);\n\t\t\tzones[normalized] = packed[i];\n\t\t\tnames[normalized] = name;\n\t\t\tif (split[5]) {\n\t\t\t\taddToGuesses(normalized, split[2].split(' '));\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getZone (name, caller) {\n\t\tname = normalizeName(name);\n\n\t\tvar zone = zones[name];\n\t\tvar link;\n\n\t\tif (zone instanceof Zone) {\n\t\t\treturn zone;\n\t\t}\n\n\t\tif (typeof zone === 'string') {\n\t\t\tzone = new Zone(zone);\n\t\t\tzones[name] = zone;\n\t\t\treturn zone;\n\t\t}\n\n\t\t// Pass getZone to prevent recursion more than 1 level deep\n\t\tif (links[name] && caller !== getZone && (link = getZone(links[name], getZone))) {\n\t\t\tzone = zones[name] = new Zone();\n\t\t\tzone._set(link);\n\t\t\tzone.name = names[name];\n\t\t\treturn zone;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfunction getNames () {\n\t\tvar i, out = [];\n\n\t\tfor (i in names) {\n\t\t\tif (names.hasOwnProperty(i) && (zones[i] || zones[links[i]]) && names[i]) {\n\t\t\t\tout.push(names[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn out.sort();\n\t}\n\n\tfunction addLink (aliases) {\n\t\tvar i, alias, normal0, normal1;\n\n\t\tif (typeof aliases === \"string\") {\n\t\t\taliases = [aliases];\n\t\t}\n\n\t\tfor (i = 0; i < aliases.length; i++) {\n\t\t\talias = aliases[i].split('|');\n\n\t\t\tnormal0 = normalizeName(alias[0]);\n\t\t\tnormal1 = normalizeName(alias[1]);\n\n\t\t\tlinks[normal0] = normal1;\n\t\t\tnames[normal0] = alias[0];\n\n\t\t\tlinks[normal1] = normal0;\n\t\t\tnames[normal1] = alias[1];\n\t\t}\n\t}\n\n\tfunction loadData (data) {\n\t\taddZone(data.zones);\n\t\taddLink(data.links);\n\t\ttz.dataVersion = data.version;\n\t}\n\n\tfunction zoneExists (name) {\n\t\tif (!zoneExists.didShowError) {\n\t\t\tzoneExists.didShowError = true;\n\t\t\t\tlogError(\"moment.tz.zoneExists('\" + name + \"') has been deprecated in favor of !moment.tz.zone('\" + name + \"')\");\n\t\t}\n\t\treturn !!getZone(name);\n\t}\n\n\tfunction needsOffset (m) {\n\t\treturn !!(m._a && (m._tzm === undefined));\n\t}\n\n\tfunction logError (message) {\n\t\tif (typeof console !== 'undefined' && typeof console.error === 'function') {\n\t\t\tconsole.error(message);\n\t\t}\n\t}\n\n\t/************************************\n\t\tmoment.tz namespace\n\t************************************/\n\n\tfunction tz (input) {\n\t\tvar args = Array.prototype.slice.call(arguments, 0, -1),\n\t\t\tname = arguments[arguments.length - 1],\n\t\t\tzone = getZone(name),\n\t\t\tout  = moment.utc.apply(null, args);\n\n\t\tif (zone && !moment.isMoment(input) && needsOffset(out)) {\n\t\t\tout.add(zone.parse(out), 'minutes');\n\t\t}\n\n\t\tout.tz(name);\n\n\t\treturn out;\n\t}\n\n\ttz.version      = VERSION;\n\ttz.dataVersion  = '';\n\ttz._zones       = zones;\n\ttz._links       = links;\n\ttz._names       = names;\n\ttz.add          = addZone;\n\ttz.link         = addLink;\n\ttz.load         = loadData;\n\ttz.zone         = getZone;\n\ttz.zoneExists   = zoneExists; // deprecated in 0.1.0\n\ttz.guess        = guess;\n\ttz.names        = getNames;\n\ttz.Zone         = Zone;\n\ttz.unpack       = unpack;\n\ttz.unpackBase60 = unpackBase60;\n\ttz.needsOffset  = needsOffset;\n\ttz.moveInvalidForward   = true;\n\ttz.moveAmbiguousForward = false;\n\n\t/************************************\n\t\tInterface with Moment.js\n\t************************************/\n\n\tvar fn = moment.fn;\n\n\tmoment.tz = tz;\n\n\tmoment.defaultZone = null;\n\n\tmoment.updateOffset = function (mom, keepTime) {\n\t\tvar zone = moment.defaultZone,\n\t\t\toffset;\n\n\t\tif (mom._z === undefined) {\n\t\t\tif (zone && needsOffset(mom) && !mom._isUTC) {\n\t\t\t\tmom._d = moment.utc(mom._a)._d;\n\t\t\t\tmom.utc().add(zone.parse(mom), 'minutes');\n\t\t\t}\n\t\t\tmom._z = zone;\n\t\t}\n\t\tif (mom._z) {\n\t\t\toffset = mom._z.offset(mom);\n\t\t\tif (Math.abs(offset) < 16) {\n\t\t\t\toffset = offset / 60;\n\t\t\t}\n\t\t\tif (mom.utcOffset !== undefined) {\n\t\t\t\tmom.utcOffset(-offset, keepTime);\n\t\t\t} else {\n\t\t\t\tmom.zone(offset, keepTime);\n\t\t\t}\n\t\t}\n\t};\n\n\tfn.tz = function (name) {\n\t\tif (name) {\n\t\t\tthis._z = getZone(name);\n\t\t\tif (this._z) {\n\t\t\t\tmoment.updateOffset(this);\n\t\t\t} else {\n\t\t\t\tlogError(\"Moment Timezone has no data for \" + name + \". See http://momentjs.com/timezone/docs/#/data-loading/.\");\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif (this._z) { return this._z.name; }\n\t};\n\n\tfunction abbrWrap (old) {\n\t\treturn function () {\n\t\t\tif (this._z) { return this._z.abbr(this); }\n\t\t\treturn old.call(this);\n\t\t};\n\t}\n\n\tfunction resetZoneWrap (old) {\n\t\treturn function () {\n\t\t\tthis._z = null;\n\t\t\treturn old.apply(this, arguments);\n\t\t};\n\t}\n\n\tfn.zoneName = abbrWrap(fn.zoneName);\n\tfn.zoneAbbr = abbrWrap(fn.zoneAbbr);\n\tfn.utc      = resetZoneWrap(fn.utc);\n\n\tmoment.tz.setDefault = function(name) {\n\t\tif (major < 2 || (major === 2 && minor < 9)) {\n\t\t\tlogError('Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment.js ' + moment.version + '.');\n\t\t}\n\t\tmoment.defaultZone = name ? getZone(name) : null;\n\t\treturn moment;\n\t};\n\n\t// Cloning a moment should include the _z property.\n\tvar momentProperties = moment.momentProperties;\n\tif (Object.prototype.toString.call(momentProperties) === '[object Array]') {\n\t\t// moment 2.8.1+\n\t\tmomentProperties.push('_z');\n\t\tmomentProperties.push('_a');\n\t} else if (momentProperties) {\n\t\t// moment 2.7.0\n\t\tmomentProperties._z = null;\n\t}\n\n\t// INJECT DATA\n\n\treturn moment;\n}));\n"],"sourceRoot":"/source/"}