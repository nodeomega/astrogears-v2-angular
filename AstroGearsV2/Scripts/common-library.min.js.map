{"version":3,"sources":["common-library.js"],"names":["CommonLibrary","CreateTextLabelList","names","map","name","TextLabel","IsInRange","value","min","max","IsNullOrUndefined","isNaN","intVal","parseInt","val","RandomInteger","Math","floor","random","ConvertSecondsToHoursMinutesSeconds","inSeconds","date","Date","setSeconds","toISOString","substr","Array","prototype","contains","v","i","this","length","JSON","stringify","unique","arr","push","errorIcon","successIcon","coffeeIcon","momentFormat","self","replace"],"mappings":"AAAA,GAAIA,gBACJ,SAAWA,GAuCP,QAASC,GAAoBC,GACzB,MAAOA,GAAMC,IAAI,SAAUC,GAAQ,MAAO,IAAIC,GAAUD,KAI5D,QAASE,GAAUC,EAAOC,EAAKC,GAG3B,GAAKC,EAAkBF,IAAQE,EAAkBD,IAAUD,EAAMC,GAAQE,MAAMJ,GAC3E,OAAO,CAGX,IAAIK,GAASC,SAASN,EAEtB,OAASK,IAAUJ,GAAUI,GAAUH,EAI3C,QAASC,GAAkBI,GACvB,MAAuB,mBAARA,IAA+B,OAARA,EAG1C,QAASC,GAAcP,EAAKC,GACxB,MAAOO,MAAKC,MAAOD,KAAKE,SAAWT,EAAOD,GAG9C,QAASW,GAAoCC,GACzC,GAAIC,GAAO,GAAIC,MAAK,KAEpB,OADAD,GAAKE,WAAWH,GACTC,EAAKG,cAAcC,OAAO,GAAI,GAlEzCC,MAAMC,UAAUC,SAAW,SAAUC,GACjC,IAAK,GAAIC,GAAI,EAAGA,EAAIC,KAAKC,OAAQF,IAE7B,GAAIG,KAAKC,UAAUH,KAAKD,MAAQG,KAAKC,UAAUL,GAC3C,OAAO,CAEf,QAAO,GAEXH,MAAMC,UAAUQ,OAAS,WAErB,IAAK,GADDC,MACKN,EAAI,EAAGA,EAAIC,KAAKC,OAAQF,IACxBM,EAAIR,SAASG,KAAKD,KACnBM,EAAIC,KAAKN,KAAKD,GAGtB,OAAOM,IAIXpC,EAAcsC,UAAY,yDAE1BtC,EAAcuC,YAAc,6DAE5BvC,EAAcwC,WAAa,4CAE3BxC,EAAcyC,aAAe,kBAE7B,IAAIpC,GAAa,WACb,QAASA,GAAUD,GACf,GAAIsC,GAAOX,IACXW,GAAKtC,KAAOA,EACZsC,EAAKnC,MAAQH,EAAKuC,QAAQ,MAAO,IAErC,MAAOtC,KAEXL,GAAcK,UAAYA,EAK1BL,EAAcC,oBAAsBA,EAapCD,EAAcM,UAAYA,EAK1BN,EAAcU,kBAAoBA,EAIlCV,EAAce,cAAgBA,EAU9Bf,EAAcmB,oCAAsCA,GACrDnB,gBAAkBA","file":"common-library.min.js","sourcesContent":["var CommonLibrary;\r\n(function (CommonLibrary) {\r\n    // prototypes\r\n    Array.prototype.contains = function (v) {\r\n        for (var i = 0; i < this.length; i++) {\r\n            //if (this[i] === v) return true;\r\n            if (JSON.stringify(this[i]) === JSON.stringify(v))\r\n                return true;\r\n        }\r\n        return false;\r\n    };\r\n    Array.prototype.unique = function () {\r\n        var arr = [];\r\n        for (var i = 0; i < this.length; i++) {\r\n            if (!arr.contains(this[i])) {\r\n                arr.push(this[i]);\r\n            }\r\n        }\r\n        return arr;\r\n    };\r\n    // string literals\r\n    // - error icon\r\n    CommonLibrary.errorIcon = '<span class=\"fa fa-exclamation-triangle error\"></span>';\r\n    // - checkmark for success icon\r\n    CommonLibrary.successIcon = '<span class=\"fa fa-check-circle action-successful\"></span>';\r\n    // - coffee icon, because who doesn't need coffee?\r\n    CommonLibrary.coffeeIcon = '<span class=\"fa fa-coffee coffee\"></span>';\r\n    // - moment string format for date/times.\r\n    CommonLibrary.momentFormat = \"MM/DD/YYYY HH:mm\";\r\n    // TextLabel class.\r\n    var TextLabel = (function () {\r\n        function TextLabel(name) {\r\n            var self = this;\r\n            self.name = name;\r\n            self.value = name.replace(/\\s/g, '');\r\n        }\r\n        return TextLabel;\r\n    }());\r\n    CommonLibrary.TextLabel = TextLabel;\r\n    // creates a list of textlabels\r\n    function CreateTextLabelList(names) {\r\n        return names.map(function (name) { return new TextLabel(name); });\r\n    }\r\n    CommonLibrary.CreateTextLabelList = CreateTextLabelList;\r\n    // Checks whether a value is within a numerical range, inclusive.\r\n    function IsInRange(value, min, max) {\r\n        // If either min or max is null/undefined, or if min is greater than max, or if the value is \r\n        // not a number, it is not in range.\r\n        if ((IsNullOrUndefined(min) || IsNullOrUndefined(max)) || (min > max) || isNaN(value)) {\r\n            return false;\r\n        }\r\n        // parse the integer value.\r\n        var intVal = parseInt(value);\r\n        // returns true if the value as an integer is within the range, false otherwise.\r\n        return ((intVal >= min) === (intVal <= max));\r\n    }\r\n    CommonLibrary.IsInRange = IsInRange;\r\n    // checks whether a given value is null or undefined.\r\n    function IsNullOrUndefined(val) {\r\n        return (typeof val === 'undefined' || val === null);\r\n    }\r\n    CommonLibrary.IsNullOrUndefined = IsNullOrUndefined;\r\n    function RandomInteger(min, max) {\r\n        return Math.floor((Math.random() * max) + min);\r\n    }\r\n    CommonLibrary.RandomInteger = RandomInteger;\r\n    function ConvertSecondsToHoursMinutesSeconds(inSeconds) {\r\n        var date = new Date(null);\r\n        date.setSeconds(inSeconds);\r\n        return date.toISOString().substr(11, 8);\r\n        //var outSeconds = inSeconds % 60;\r\n        //var outMinutes = Math.floor(inSeconds / 60) % 60;\r\n        //var outHours = Math.floor(inSeconds / 3600)\r\n        //return outHours + \":\" + outMinutes + \":\" + outSeconds;\r\n    }\r\n    CommonLibrary.ConvertSecondsToHoursMinutesSeconds = ConvertSecondsToHoursMinutesSeconds;\r\n})(CommonLibrary || (CommonLibrary = {}));\r\n"],"sourceRoot":"/source/"}